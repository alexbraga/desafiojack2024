name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    # Recupera a última tag e calcula a próxima tag de versão (ex: 1.0, 2.0, etc.)
    - name: Get latest tag
      id: get_tag
      run: |
        latest_tag=$(git tag --sort=-v:refname | grep -E '^[0-9]+\.[0-9]+$' | head -n 1)
        if [ -z "$latest_tag" ]; then
          next_tag="1.0"
        else
          major_version=$(echo $latest_tag | cut -d. -f1)
          next_tag=$((major_version + 1)).0
        fi
        echo "::set-output name=tag::$next_tag"

    - name: Build the Docker image
      run: |
        docker build . --file Dockerfile --tag desafiojack:${{ steps.get_tag.outputs.tag }}

    - name: Push the Docker image
      run: |
        docker tag desafiojack:${{ steps.get_tag.outputs.tag }} alexgbraga/desafiojack:${{ steps.get_tag.outputs.tag }}
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
        docker push alexgbraga/desafiojack:${{ steps.get_tag.outputs.tag }}
